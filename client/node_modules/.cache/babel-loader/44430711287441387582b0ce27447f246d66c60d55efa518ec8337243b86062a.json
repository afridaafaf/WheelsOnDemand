{"ast":null,"code":"var _jsxFileName = \"/Users/afridaafaf/Desktop/Project470/client/src/components/PrivateRoute.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n/**\n * A higher-order component to protect routes based on authentication and roles.\n *\n * @param {ReactNode} children - The component to render if access is allowed.\n * @param {string} roleRequired - (Optional) The role required to access the route.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  roleRequired\n}) => {\n  // Retrieve token and role from localStorage\n  const token = localStorage.getItem(\"token\");\n  const userRole = localStorage.getItem(\"role\");\n\n  // If no token is found, redirect to the login page\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If a specific role is required and the user's role doesn't match, redirect to the home page\n  if (roleRequired && userRole !== roleRequired) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated and role matches (if applicable), render the children components\n  return children;\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","PrivateRoute","children","roleRequired","token","localStorage","getItem","userRole","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/afridaafaf/Desktop/Project470/client/src/components/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n/**\n * A higher-order component to protect routes based on authentication and roles.\n *\n * @param {ReactNode} children - The component to render if access is allowed.\n * @param {string} roleRequired - (Optional) The role required to access the route.\n */\nconst PrivateRoute = ({ children, roleRequired }) => {\n  // Retrieve token and role from localStorage\n  const token = localStorage.getItem(\"token\");\n  const userRole = localStorage.getItem(\"role\");\n\n  // If no token is found, redirect to the login page\n  if (!token) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  // If a specific role is required and the user's role doesn't match, redirect to the home page\n  if (roleRequired && userRole !== roleRequired) {\n    return <Navigate to=\"/\" />;\n  }\n\n  // If authenticated and role matches (if applicable), render the children components\n  return children;\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACnD;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;EAE7C;EACA,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAIT,YAAY,IAAII,QAAQ,KAAKJ,YAAY,EAAE;IAC7C,oBAAOH,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;;EAEA;EACA,OAAOV,QAAQ;AACjB,CAAC;AAACW,EAAA,GAjBIZ,YAAY;AAmBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}