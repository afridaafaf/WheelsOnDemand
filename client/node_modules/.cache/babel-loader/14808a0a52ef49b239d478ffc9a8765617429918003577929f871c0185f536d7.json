{"ast":null,"code":"var _jsxFileName = \"/Users/afridaafaf/Downloads/Project470/client/src/pages/AvailableCars.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableCars = () => {\n  _s();\n  const [vehicles, setVehicles] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/vehicles\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        setVehicles(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error fetching vehicles\");\n      }\n    };\n    fetchVehicles();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Available Cars for Rent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: vehicles.map(vehicle => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [vehicle.model, \" - \", vehicle.licensePlate, \" - \", vehicle.status]\n      }, vehicle._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableCars, \"xUoaIYS0+xa84GBwE5T3zN0yh+4=\");\n_c = AvailableCars;\nexport default AvailableCars;\nvar _c;\n$RefreshReg$(_c, \"AvailableCars\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AvailableCars","_s","vehicles","setVehicles","error","setError","fetchVehicles","token","localStorage","getItem","response","get","headers","Authorization","data","err","_err$response","_err$response$data","message","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","map","vehicle","model","licensePlate","status","_id","_c","$RefreshReg$"],"sources":["/Users/afridaafaf/Downloads/Project470/client/src/pages/AvailableCars.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst AvailableCars = () => {\r\n    const [vehicles, setVehicles] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchVehicles = async () => {\r\n            const token = localStorage.getItem(\"token\");\r\n            try {\r\n                const response = await axios.get(\"http://localhost:5000/api/vehicles\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                setVehicles(response.data);\r\n            } catch (err) {\r\n                setError(err.response?.data?.message || \"Error fetching vehicles\");\r\n            }\r\n        };\r\n\r\n        fetchVehicles();\r\n    }, []);\r\n\r\n    if (error) return <div style={{ color: \"red\" }}>Error: {error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h3>Available Cars for Rent</h3>\r\n            <ul>\r\n                {vehicles.map(vehicle => (\r\n                    <li key={vehicle._id}>\r\n                        {vehicle.model} - {vehicle.licensePlate} - {vehicle.status}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableCars;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oCAAoC,EAAE;UACnEC,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUN,KAAK,EAAE;YAChC,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QACFJ,WAAW,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACVZ,QAAQ,CAAC,EAAAW,aAAA,GAAAD,GAAG,CAACL,QAAQ,cAAAM,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,yBAAyB,CAAC;MACtE;IACJ,CAAC;IAEDZ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE,oBAAOL,OAAA;IAAKoB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,GAAC,SAAO,EAACjB,KAAK;EAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpE,oBACI1B,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC1B,OAAA;MAAAsB,QAAA,EACKnB,QAAQ,CAACwB,GAAG,CAACC,OAAO,iBACjB5B,OAAA;QAAAsB,QAAA,GACKM,OAAO,CAACC,KAAK,EAAC,KAAG,EAACD,OAAO,CAACE,YAAY,EAAC,KAAG,EAACF,OAAO,CAACG,MAAM;MAAA,GADrDH,OAAO,CAACI,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACxB,EAAA,CArCID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}