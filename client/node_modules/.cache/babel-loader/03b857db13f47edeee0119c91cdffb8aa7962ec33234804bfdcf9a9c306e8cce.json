{"ast":null,"code":"import axios from 'axios';\nexport const rentCar = async (carId, rentalDetails) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.post(`http://localhost:5000/api/rentals/rent`, {\n    carId,\n    ...rentalDetails\n  }, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return response.data; // Assuming the response contains rental confirmation details\n};\nexport const getRecentRentals = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.get(\"http://localhost:5000/api/rentals/recent\", {\n      // Corrected endpoint\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data.rentals || []; // Return rentals or an empty array if not found\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: 'Failed to fetch rentals'\n    };\n  }\n};","map":{"version":3,"names":["axios","rentCar","carId","rentalDetails","token","localStorage","getItem","response","post","headers","data","getRecentRentals","get","rentals","error","_error$response","message"],"sources":["/Users/afridaafaf/Desktop/Project470/client/src/services/rentalService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const rentCar = async (carId, rentalDetails) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await axios.post(`http://localhost:5000/api/rentals/rent`, {\r\n        carId,\r\n        ...rentalDetails\r\n    }, {\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    return response.data; // Assuming the response contains rental confirmation details\r\n};\r\n\r\nexport const getRecentRentals = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n        const response = await axios.get(\"http://localhost:5000/api/rentals/recent\", { // Corrected endpoint\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        return response.data.rentals || []; // Return rentals or an empty array if not found\r\n    } catch (error) {\r\n        throw error.response?.data || { message: 'Failed to fetch rentals' };\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,KAAK,EAAEC,aAAa,KAAK;EACnD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,wCAAwC,EAAE;IACxEN,KAAK;IACL,GAAGC;EACP,CAAC,EAAE;IACCM,OAAO,EAAE;MACL,eAAe,EAAE,UAAUL,KAAK,EAAE;MAClC,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EACF,OAAOG,QAAQ,CAACG,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMP,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACY,GAAG,CAAC,0CAA0C,EAAE;MAAE;MAC3EH,OAAO,EAAE;QACL,eAAe,EAAE,UAAUL,KAAK,EAAE;QAClC,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI,CAACG,OAAO,IAAI,EAAE,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAI;MAAEM,OAAO,EAAE;IAA0B,CAAC;EACxE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}